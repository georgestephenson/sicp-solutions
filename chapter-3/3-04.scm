(define (make-account balance password)
  (let ((password-attempts 0))
    (define (withdraw amount)
      (if (>= balance amount)
          (begin (set! balance (- balance amount))
                balance)
          "Insufficient funds"))
    (define (deposit amount)
      (set! balance (+ balance amount))
      balance)
    (define (dispatch try-password m)
      (if (eq? password try-password)
        (begin (set! password-attempts 0)
          (cond ((eq? m 'withdraw) withdraw)
            ((eq? m 'deposit) deposit)
            (else (error "Unknown request -- MAKE-ACCOUNT"
                        m))))
        (begin (set! password-attempts (+ password-attempts 1))
          (if (= password-attempts 8)
              (call-the-cops)
              (lambda (x) "Incorrect password")))))
    dispatch))

(define (call-the-cops)
  (error "The cops have been called!"))

(define acc (make-account 100 'secret-password))

((acc 'secret-password 'withdraw) 40)

((acc 'some-other-password 'deposit) 50)
((acc '1234 'deposit) 50)
((acc '0000 'deposit) 50)
((acc 'password-1 'deposit) 50)
((acc 'monkey 'deposit) 50)
((acc 'bingo 'deposit) 50)
((acc '88888888 'deposit) 50)
((acc 'let-me-in 'deposit) 50)